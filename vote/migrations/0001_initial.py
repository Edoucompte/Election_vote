# Generated by Django 5.2.5 on 2025-08-26 01:22

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Feminin')], max_length=1)),
                ('date_naissance', models.DateField()),
                ('matricule', models.BigIntegerField()),
                ('is_electeur', models.BooleanField(default=False)),
                ('is_superviseur', models.BooleanField(default=False)),
                ('is_candidat', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_candidature', models.DateField()),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidat', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('etat', models.CharField(choices=[('a_venir', 'A venir'), ('en_cours', 'En cours'), ('terminee', 'Termin√©e')], default='a_venir', max_length=100)),
                ('candidats', models.ManyToManyField(related_name='candidats', through='vote.Candidature', to=settings.AUTH_USER_MODEL)),
                ('superviseur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='superviseur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date_debut', 'date_fin'],
            },
        ),
        migrations.AddField(
            model_name='candidature',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='election_candidature', to='vote.election'),
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_vote', models.DateField()),
                ('candidat', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vote_candidat', to=settings.AUTH_USER_MODEL)),
                ('electeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electeur', to=settings.AUTH_USER_MODEL)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='election_vote', to='vote.election')),
            ],
        ),
        migrations.AddField(
            model_name='election',
            name='electeurs',
            field=models.ManyToManyField(through='vote.Vote', through_fields=('election', 'electeur'), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='candidature',
            constraint=models.UniqueConstraint(fields=('candidat', 'election'), name='unique_candidature_par_election'),
        ),
        migrations.AddConstraint(
            model_name='vote',
            constraint=models.UniqueConstraint(fields=('electeur', 'election'), name='unique_vote_par_election'),
        ),
    ]
